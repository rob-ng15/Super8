// PS/2 PORT - READS KEYCODE FROM PS/2 KEYBOARD
// MODIFIED FROM ORIGINAL CODE https://github.com/hoglet67/Ice40Beeb converted to Silice by @lawrie, optimised and simplified by @rob-ng15
//  ZX Spectrum for Altera DE1
//
//  Copyright (c) 2009-2011 Mike Stirling
//
//  All rights reserved
//
//  Redistribution and use in source and synthezised forms, with or without
//  modification, are permitted provided that the following conditions are met:
//
//  * Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
//
//  * Redistributions in synthesized form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
//  * Neither the name of the author nor the names of other contributors may
//    be used to endorse or promote products derived from this software without
//    specific prior written agreement from the author.
//
//  * License is granted for non-commercial use only.  A fee may not be charged
//    for redistributions as source code or in synthesized/hardware form without
//    specific prior written agreement from the author.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
//  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
//  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE
//  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
//  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
//  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
//  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
//  POSSIBILITY OF SUCH DAMAGE.
//
//  PS/2 interface (input only)
//  Based loosely on ps2_ctrl.vhd (c) ALSE. http://www.alse-fr.com

unit ps2(
    input   uint1   ps2data_ext,
    input   uint1   ps2clk_ext,
    output  uint1   valid,
    output  uint1   error,
    output  uint8   data
) {
    uint4   clk = 4b1111; clk := { ps2clk_ext, clk[1,3] }; valid := 0; error := 0;                                              // BUFFER THE CLOCK ACROSS THE CLOCK DOMAINS


    algorithm <autorun> {
        uint1   ps2_clk_in = 1;
        uint4   bit_count = 0;                          uint4   bit_count_NEXT <:: bit_count + 1;
        uint9   shift_reg = uninitialised;              uint9   shift_reg_NEXT <:: { ps2data_ext, shift_reg[1,8] };
        uint1   parity = uninitialised;                 uint1   parity_NEXT <:: parity ^ ps2data_ext;

        while(1) {
            switch( clk ) {                                                                                                     // FILTER THE CLOCK
                case 4b1100: { ps2_clk_in = 1; }                                                                                // 2b11xx -> clk = 1
                case 4b0011: {
                    if( ps2_clk_in ) {                                                                                          // 2b00xx -> clk = 0
                        switch( bit_count ) {
                            case 0: { parity = 0; if( ~ps2data_ext ) { bit_count = 1; } }                                       // Start bit received
                            default: { shift_reg = shift_reg_NEXT; parity = parity_NEXT; bit_count = bit_count_NEXT; }          // Data bit ( 1 -> 9 ) received, shift in from right
                            case 10: {
                                if( ps2data_ext ) {                                                                             // Data complete
                                    if( parity ) { data = shift_reg[0,8]; valid = 1; } else { error = 1; }
                                    bit_count = 0;
                                }
                            }
                        }
                    }
                    ps2_clk_in = 0;
                }
                default: {}
            }
        }
    }
}

